%li.snap.row
	%article.medium-6.medium-offset-3.columns.panel.radius.text-center
		- size ||= :medium
		- image = Rails.env.production? ? snap.image.url(size) : snap.image.path 
		- begin
			- if snap.is_mappable
				= link_to(image_tag(snap.image.url(size), class: 'th radius', :"data-latitude" => EXIFR::JPEG.new(open(image)).gps.to_h[:latitude], :"data-longitude" => EXIFR::JPEG.new(open(image)).gps.to_h[:longitude]), '/snaps/'+snap.id.to_s, id: "snap_link")
			- else
				= link_to(image_tag(snap.image.url(:medium), class: 'th radius'), '/snaps/'+snap.id.to_s, id: "snap_link")
		- rescue Exception => e
			- logger.info(e.message)
			- logger.info(e.backtrace)
			= link_to(image_tag(snap.image.url(:medium), class: 'th radius'), '/snaps/'+snap.id.to_s, id: "snap_link")
		%blockquote
			= snap.description 
			%cite
				%a{href: '/users/'+snap.user_id.to_s, id: "user_link"} 
					= User.find_by_id(snap.user_id).username
		- if !snap.tags.empty?
			.row
				%ul.small-9.small-centered.columns
					= render snap.tags

		